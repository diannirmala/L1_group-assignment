# Chapter 3






print(100*"=")
print("3-1. Names:")

# Chapter 3-1 print names

# 3-1. Names: Store the names of a few of your friends in a list called names. Print each person’s name by accessing each element in the list, one at a time.

# print isi list berdasarkan index nya

list_name = ["Budi","Dina","Denis"]

print(f"Nama saya {list_name[0]}") # Indeks pertama itu 0
print(f"Nama saya {list_name[1]}") # Indeks 1
print(f"Nama saya {list_name[2]}") # Indeks 2


print("\n")

print(100*"=")
print("3-2. Greetings:")

# 3-2. Greetings: Start with the list you used in Exercise 3-1, but instead of just
# printing each person’s name, print a message to them. The text of each message should be the same, but each message should be personalized with the
# person’s name.


list_nama = ["Budi","Dina","Denis"]


msg = (f"Hallo nama saya {list_nama[0]}")
print(msg)

msg = (f"Hallo nama saya {list_nama[1]}")
print(msg)

msg = (f"Hallo nama saya {list_nama[2]}")
print(msg)


print("\n")

print(100*"=")
print("3-3. Your Own List:")

# 3-3. Your Own List: Think of your favorite mode of transportation, such as a
# motorcycle or a car, and make a list that stores several examples. Use your list
# to print a series of statements about these items, such as “I would like to own a
# Honda motorcycle.”


list_mobil = ["BMW","Honda","Subaru"]


mg = (f"I would like to own a {list_mobil[0]}")
print(mg)

mg = (f"I would like to own a {list_mobil[1]}")
print(mg)

mg = (f"I would like to own a {list_mobil[2]}")
print(mg)


print("\n")

print(150*"=")
print("3-4. Guest List:")

# 3-4. Guest List: If you could invite anyone, living or deceased, to dinner, who
# would you invite? Make a list that includes at least three people you’d like to
# invite to dinner. Then use your list to print a message to each person, inviting
# them to dinner.

Guest = ["Budi","Dina","Denis"]

name = Guest[0].title()
print(f"{name} Please Come to Dinner")

name = Guest[1].title()
print(f"{name} Please Come to Dinner")

name = Guest[2].title()
print(f"{name} Please Come to Dinner")


print("\n")

print(100*"=")
print("3-5. Changing Guest List:")

# 3-5. Changing Guest List: You just heard that one of your guests can’t make the
# dinner, so you need to send out a new set of invitations. You’ll have to think of
# someone else to invite.
# •	 Start with your program from Exercise 3-4. Add a print statement at the
# end of your program stating the name of the guest who can’t make it.
# •	 Modify your list, replacing the name of the guest who can’t make it with
# the name of the new person you are inviting.
# •	 Print a second set of invitation messages, one for each person who is still
# in your list.


list_invited_people = ["Budi","Dina","Denis"]


name = list_invited_people[0].title()
print(f"{name} Please Come to Dinner")

name = list_invited_people[1].title()
print(f"{name} Please Come to Dinner")

name = list_invited_people[2].title()
print(f"{name} Please Come to Dinner")
print("\n")
print(f"\nSorry, {name} can't make it to dinner." )

del(list_invited_people[2])

list_invited_people.insert(2,"gary")

print("\n")

name = list_invited_people[0].title()
print(f"{name} Please Come to Dinner")

name = list_invited_people[1].title()
print(f"{name} Please Come to Dinner")

name = list_invited_people[2].title()
print(f"{name} Please Come to Dinner")

    
print("\n")

print(100*"=")
print("3-6. More Guests:")

# 3-6. More Guests: You just found a bigger dinner table, so now more space is
# available. Think of three more guests to invite to dinner.
# •	 Start with your program from Exercise 3-4 or Exercise 3-5. Add a print
# statement to the end of your program informing people that you found a
# bigger dinner table.
# •	 Use insert() to add one new guest to the beginning of your list.
# •	 Use insert() to add one new guest to the middle of your list.
# •	 Use append() to add one new guest to the end of your list.
# •	 Print a new set of invitation messages, one for each person in your list

list_invited_people = ["Budi","Dina","Denis"]


name = list_invited_people[0].title()
print(f"{name} Please Come to Dinner")

name = list_invited_people[1].title()
print(f"{name} Please Come to Dinner")

name = list_invited_people[2].title()
print(f"{name} Please Come to Dinner")
print("\n")
print(f"\nSorry, {name} can't make it to dinner." )

del(list_invited_people[2])

list_invited_people.insert(2,"gary")

print("\n")


name = list_invited_people[0].title()
print(f"{name}, Please Come to Dinner")

name = list_invited_people[1].title()
print(f"{name}, Please Come to Dinner")

name = list_invited_people[2].title()
print(f"{name}, Please Come to Dinner")


print(100*"=")

print("\nWe got a bigger table!")
list_invited_people.insert(0, 'Andre ')
list_invited_people.insert(2, 'Ivan')
list_invited_people.append('Abel')

name = list_invited_people[0].title()
print(f"{name}, Please Come To Dinnier.")

name = list_invited_people[1].title()
print(f"{name}, Please Come To Dinnier.")

name = list_invited_people[2].title()
print(f"{name}, Please Come To Dinnier.")

name = list_invited_people[3].title()
print(f"{name}, Please Come To Dinnier.")

name = list_invited_people[4].title()
print(f"{name}, Please Come To Dinnier.")

name = list_invited_people[5].title()
print(f"{name}, Please Come To Dinnier.")


print("\n")
print(100*"=")


# Oh no, the table won't arrive on time!
print("\nSorry, we can only invite two people to dinner.")

name = list_invited_people.pop()
print(f"Sorry, {name.title()} there's no room at the table.")

name = list_invited_people.pop()
print(f"Sorry, {name.title()} there's no room at the table.")

name = list_invited_people.pop()
print(f"Sorry, {name.title()} there's no room at the table.")

name = list_invited_people.pop()
print(f"Sorry, {name.title()} there's no room at the table.")

print("\n")
print(100*"=")

# There should be two people left. Let's invite them.
name = list_invited_people[0].title()
print(f"{name}, please come to dinner.")

name = list_invited_people[1].title()
print(f"{name}, please come to dinner.")

# Empty out the list.
del(list_invited_people[0])
del(list_invited_people[0])

# Prove the list is empty.
print(list_invited_people)



print(100*"=")
print("3-8. Seeing the World:")

# 3-8. Seeing the World: Think of at least five places in the world you'd like to visit.

# Store the Location in a list. Make sure the list is not in alphabetical order.
# Print your list in its original order. Don't worry about printing the list neatly, just print it as a raw Python list.
# Use sorted() to print your list in alphabetical order without modifying the actual list.
# Show that your list is still in its original order by printing it.
# Use sorted() to print your list in reverse alphabetical order without changing the order of the original list.
# Show that your list is still in its original order by printing it again.
# Use reverse() to change the order of your list. Print the list to show that its order has changed.
# Use reverse() to change the order of your list again. Print the list to show it's back to its original order.
# Use sort() to change your list so it's stored in alphabetical order. Print the list to show that its order has been changed.
# Use sort() to change your list so it's stored in reverse alphabetical order. Print the list to show that its order has changed.


List_Location = ['Indonesia', 'Malaysia', 'Amerika', 'China', 'Inggris']

print("Original order:")
print(List_Location)


print("\nAlphabetical:")
print(sorted(List_Location))

print("\nOriginal order:")
print(List_Location)

print("\nReverse alphabetical:")
print(sorted(List_Location, reverse=True))

print("\nOriginal order:")
print(List_Location)

print("\nReversed:")
List_Location.reverse()
print(List_Location)

print("\nOriginal order:")
List_Location.reverse()
print(List_Location)

print("\nAlphabetical")
List_Location.sort()
print(List_Location)

print("\nReverse alphabetical")
List_Location.sort(reverse=True)
print(List_Location)